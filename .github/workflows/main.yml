name: CI

on:
  create:
    tags:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Native Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          #- macos-latest
    steps:
      - uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          # Bump the prefix number to evict all previous caches and
          # enforce a clean build, in the unlikely case that some
          # weird build error occur and ccache becomes a potential
          # suspect.
          key: 0-cache-ubuntu-latest-${{ github.run_id }}
          restore-keys: |
            0-cache-ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
      - uses: actions/cache@v4
        with:
          path: ~/Library/Caches/ccache
          key: 0-cache-macos-latest-${{ github.run_id }}
          restore-keys: |
            0-cache-macos-latest
        if: matrix.os == 'macos-latest'
      - name: Setup `wasmtime` for tests
        uses: bytecodealliance/actions/wasmtime/setup@v1
        with:
          version: "18.0.2"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --tags --force
        name: Force-fetch tags to work around actions/checkout#290
      # We can't use `--depth 1` here sadly because the GNU config
      # submodule is not pinned to a particular tag/branch. Please
      # bump depth (or even better, the submodule), in case of "error:
      # Server does not allow request for unadvertised object" in the
      # future.
      - run: git submodule update --init --depth 32 --jobs 3
      - name: Install ccache, ninja (macOS)
        run: brew install ccache ninja
        if: matrix.os == 'macos-latest'
      - name: Install ccache, ninja (Linux)
        run: sudo apt install ccache ninja-build
        if: matrix.os == 'ubuntu-latest'
      - name: Build
        run: NINJA_FLAGS=-v make package LLVM_CMAKE_FLAGS=-DLLVM_CCACHE_BUILD=ON
        shell: bash
      - name: Run the testsuite
        run: NINJA_FLAGS=-v make check RUNTIME=wasmtime
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          # Upload the dist folder. Give it a name according to the OS it was built for.
          name: ${{ format( 'dist-{0}', matrix.os) }}
          path: dist

          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
